FUNCTION(LOAD_PROFILE ISA PLATFORM)
  FILE(GLOB ISA_SRCS "arch/${ISA}/*.c" "arch/${ISA}/*.cpp" "arch/${ISA}/*.s")
  FILE(GLOB PLATFORM_SRCS "arch/${ISA}/${PLATFORM}/*.c" "arch/${ISA}/${PLATFORM}/*.cpp" "arch/${ISA}/${PLATFORM}/*.s")
  SET(PLATFORM_BOOT_SRC "arch/${ISA}/${PLATFORM}/boot.s")
  LIST(REMOVE_ITEM PLATFORM_SRCS ${PLATFORM_BOOT_SRC})
  
  INCLUDE("arch/${ISA}/flags.cmake")
  INCLUDE("arch/${ISA}/${PLATFORM}/flags.cmake")
  
  #add_subdirectory(arch/${ISA})
  #add_subdirectory(arch/${ISA}/${PLATFORM})
  
  SET(ISA_SRCS ${ISA_SRCS} PARENT_SCOPE)
  SET(PLATFORM_SRCS ${PLATFORM_SRCS} PARENT_SCOPE)
  SET(PLATFORM_BOOT_SRC ${PLATFORM_BOOT_SRC} PARENT_SCOPE)
  SET(PLATFORM_LAYOUT "${CMAKE_CURRENT_SOURCE_DIR}/arch/${ISA}/${PLATFORM}/layout.ld" PARENT_SCOPE)

  set(ISA_C_FLAGS "${ISA_C_FLAGS}" PARENT_SCOPE)
  set(ISA_CPP_FLAGS "${ISA_CPP_FLAGS}" PARENT_SCOPE)
  set(ISA_ASM_FLAGS "${ISA_ASM_FLAGS}" PARENT_SCOPE)
  set(ISA_LINKER_FLAGS "${ISA_LINKER_FLAGS}" PARENT_SCOPE)
  
  set(PLATFORM_C_FLAGS "${PLATFORM_C_FLAGS}" PARENT_SCOPE)
  set(PLATFORM_CPP_FLAGS "${PLATFORM_CPP_FLAGS}" PARENT_SCOPE)
  set(PLATFORM_ASM_FLAGS "${PLATFORM_ASM_FLAGS}" PARENT_SCOPE)
  set(PLATFORM_LINKER_FLAGS "${PLATFORM_LINKER_FLAGS}" PARENT_SCOPE)
ENDFUNCTION(LOAD_PROFILE)

LOAD_PROFILE("i386" "pc")

SET(CMAKE_ASM-ATT_COMPILE_OBJECT
        "<CMAKE_ASM-ATT_COMPILER> ${ISA_ASM_FLAGS} ${PLATFORM_ASM_FLAGS} <SOURCE> -c -o <OBJECT>")
SET(CMAKE_C_FLAGS "${ISA_C_FLAGS} ${PLATFORM_C_FLAGS}")
SET(CMAKE_CXX_FLAGS "${ISA_CPP_FLAGS} ${PLATFORM_CPP_FLAGS}")
set(CMAKE_C_LINK_EXECUTABLE "<CMAKE_C_COMPILER> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>")
set(CMAKE_CXX_LINK_EXECUTABLE "<CMAKE_CXX_COMPILER> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>")

FILE(GLOB CHAOS_CLIB_SRCS "../clib/*.c" "../clib/*.cpp")
FILE(GLOB KERNEL_SRCS "*.c" "*.cpp")
add_executable(kernel ${PLATFORM_BOOT_SRC} ${ISA_SRCS} ${PLATFORM_SRCS} ${KERNEL_SRCS} ${CHAOS_CLIB_SRCS})

target_link_libraries(kernel gcc)

target_include_directories(kernel PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include ${CMAKE_CURRENT_SOURCE_DIR}/../clib/include)

SET_TARGET_PROPERTIES(kernel PROPERTIES LINK_FLAGS
        "-T ${PLATFORM_LAYOUT} ${ISA_LINKER_FLAGS} ${PLATFORM_LINKER_FLAGS}")

