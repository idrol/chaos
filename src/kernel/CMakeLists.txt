FUNCTION(LOAD_PROFILE ISA PLATFORM)
    FILE(GLOB ISA_SRCS "arch/${ISA}/*.c" "arch/${ISA}/*.cpp" "arch/${ISA}/*.s")
    FILE(GLOB PLATFORM_SRCS "arch/${ISA}/${PLATFORM}/*.c" "arch/${ISA}/${PLATFORM}/*.cpp" "arch/${ISA}/${PLATFORM}/*.s")
    SET(PLATFORM_BOOT_SRC "arch/${ISA}/${PLATFORM}/boot.s")
    LIST(REMOVE_ITEM PLATFORM_SRCS ${PLATFORM_BOOT_SRC})

    SET(ISA_SRCS ${ISA_SRCS} PARENT_SCOPE)
    SET(PLATFORM_SRCS ${PLATFORM_SRCS} PARENT_SCOPE)
    SET(PLATFORM_BOOT_SRC ${PLATFORM_BOOT_SRC} PARENT_SCOPE)
    SET(PLATFORM_LAYOUT "${CMAKE_CURRENT_SOURCE_DIR}/arch/${ISA}/${PLATFORM}/layout.ld" PARENT_SCOPE)
ENDFUNCTION(LOAD_PROFILE)

LOAD_PROFILE(${OS_KERNEL_ARCH} ${OS_PLATFORM})

include(sources.cmake)
message("${CHAOS_LIBC_SRCS}")
add_executable(kernel ${PLATFORM_BOOT_SRC} ${ISA_SRCS} ${PLATFORM_SRCS} ${KERNEL_SRCS} ${CHAOS_LIBC_SRCS})

target_link_libraries(kernel gcc)

target_include_directories(kernel PRIVATE ${PROJECT_SOURCE_DIR}/include/libc ${PROJECT_SOURCE_DIR}/include/kernel)

SET_TARGET_PROPERTIES(kernel PROPERTIES
        LINK_FLAGS "-T ${PLATFORM_LAYOUT} ${ISA_LINKER_FLAGS} ${PLATFORM_LINKER_FLAGS}"
        RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}"
)