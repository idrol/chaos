option(OS_ARCH "OS Processor architecture" "i686")
option(OS_PLATFORM "OS platform" "pc")

set(CMAKE_C_COMPILER ${OS_ARCH}-elf-gcc)
set(CMAKE_CXX_COMPILER ${OS_ARCH}-elf-g++)
set(CMAKE_ASM-ATT_COMPILER ${OS_ARCH}-elf-g++)

if(${OS_ARCH} MATCHES "i686")
  set(OS_KERNEL_ARCH "i386")
elseif(${OS_ARCH} MATCHES "i586")
  set(OS_KERNEL_ARCH "i386")
elseif(${OS_ARCH} MATCHES "i486")
    set(OS_KERNEL_ARCH "i386")
endif()

FUNCTION(LOAD_COMPILER_PROFILE ISA PLATFORM)
    INCLUDE("src/kernel/arch/${ISA}/flags.cmake")
    INCLUDE("src/kernel/arch/${ISA}/${PLATFORM}/flags.cmake")

    set(ISA_C_FLAGS "${ISA_C_FLAGS}" PARENT_SCOPE)
    set(ISA_CPP_FLAGS "${ISA_CPP_FLAGS}" PARENT_SCOPE)
    set(ISA_ASM_FLAGS "${ISA_ASM_FLAGS}" PARENT_SCOPE)
    set(ISA_LINKER_FLAGS "${ISA_LINKER_FLAGS}" PARENT_SCOPE)

    set(PLATFORM_C_FLAGS "${PLATFORM_C_FLAGS}" PARENT_SCOPE)
    set(PLATFORM_CPP_FLAGS "${PLATFORM_CPP_FLAGS}" PARENT_SCOPE)
    set(PLATFORM_ASM_FLAGS "${PLATFORM_ASM_FLAGS}" PARENT_SCOPE)
    set(PLATFORM_LINKER_FLAGS "${PLATFORM_LINKER_FLAGS}" PARENT_SCOPE)
ENDFUNCTION(LOAD_COMPILER_PROFILE)



set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")
cmake_minimum_required(VERSION 3.13)
project(Chaos)

ENABLE_LANGUAGE(ASM-ATT)
ENABLE_LANGUAGE(CXX)

LOAD_COMPILER_PROFILE(${OS_KERNEL_ARCH} ${OS_PLATFORM})

SET(CMAKE_ASM-ATT_COMPILE_OBJECT
        "<CMAKE_ASM-ATT_COMPILER> ${ISA_ASM_FLAGS} ${PLATFORM_ASM_FLAGS} <SOURCE> -c -o <OBJECT>")
SET(CMAKE_C_FLAGS "${ISA_C_FLAGS} ${PLATFORM_C_FLAGS}")
SET(CMAKE_CXX_FLAGS "${ISA_CPP_FLAGS} ${PLATFORM_CPP_FLAGS}")
set(CMAKE_C_LINK_EXECUTABLE "<CMAKE_C_COMPILER> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>")
set(CMAKE_CXX_LINK_EXECUTABLE "<CMAKE_CXX_COMPILER> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>")

set(CMAKE_VERBOSE_MAKEFILE TRUE)

ADD_SUBDIRECTORY(src)